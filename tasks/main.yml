---
# tasks file for automatic-ripping-machine

############################################
# Set variables from environment, if present.
# It's ugly but I'm not sure how to make it better.

- name: set ARMPATH from environment
  set_fact:
    arm_setup_armpath: "{{ ARMPATH }}"
  when:
  - ARMPATH is defined
  - ARMPATH != ""

- name: set RAWPATH from environment
  set_fact:
    arm_setup_rawpath: "{{ RAWPATH }}"
  when:
  - RAWPATH is defined
  - RAWPATH != ""

- name: set MEDIA_DIR from environment
  set_fact:
    arm_setup_media_dir: "{{ MEDIA_DIR }}"
  when:
  - MEDIA_DIR is defined
  - MEDIA_DIR != ""
- name: set CIFS_USER from environment
  set_fact:
    arm_setup_cifs_user: "{{ CIFS_USER }}"
  when:
  - CIFS_USER is defined
  - CIFS_USER != ""

- name: set CIFS_PASSWORD from environment
  set_fact:
    arm_setup_cifs_password: "{{ CIFS_PASSWORD }}"
  when:
  - CIFS_PASSWORD is defined
  - CIFS_PASSWORD != ""

- name: set CIFS_PATH from environment
  set_fact:
    arm_setup_cifs_path: "{{ CIFS_PATH }}"
  when:
  - CIFS_PATH is defined
  - CIFS_PATH != ""

- name: set CIFS_MOUNT_POINT from environment
  set_fact:
    arm_setup_cifs_mount_point: "{{ CIFS_MOUNT_POINT }}"
  when:
  - CIFS_PATH is defined
  - CIFS_PATH != ""

- name: set cifs_username fact if arm_setup_cifs_user is set
  set_fact:
    cifs_username: ",username={{ arm_setup_cifs_user }}"
    cifs_password: ""
    cifs_guest: ""
  when: arm_setup_cifs_user != ""

- name: set cifs_password fact if arm_setup_cifs_password is set
  set_fact:
    cifs_password: ",password={{ arm_setup_cifs_password }}"
  when:
  - arm_setup_cifs_user != ""
  - arm_setup_cifs_password != ""

- name: set cifs_guest fact if arm_setup_cifs_user is not set
  set_fact:
    cifs_username: ""
    cifs_password: ""
    cifs_guest: ",guest"
  when:
  - arm_setup_cifs_user == ""

# Finished setting variables
############################

- name: add apt repositories
  apt_repository:
    repo: "{{ item }}"
  with_items:
  - 'ppa:heyarje/makemkv-beta'
  - 'ppa:stebbins/handbrake-releases'
  - 'ppa:mc3man/bionic-prop'

- name: install packages
  apt:
    pkg:
      - git
      - makemkv-bin
      - makemkv-oss
      - handbrake-cli
      - libavcodec-extra
      - abcde
      - flac
      - imagemagick
      - glyrc
      - cdparanoia
      - at
      - python3
      - python3-pip
      - libcurl4-openssl-dev
      - libssl-dev
      - cifs-utils
    update_cache: yes
    state: present  

- name: install JRE
  apt: name=default-jre-headless state=present

- name: install libdvd
  apt: name=libdvd-pkg state=present
  notify: reconfigure libdvd-pkg

# Ensure libdvd-pkg is reconfigured
- meta: flush_handlers

- name: Ensure arm group exists
  group:
    name: arm
    state: present

- name: ensure arm user exists with the right groups
  user:
    name: arm
    groups: cdrom
    append: yes

- name: get A.R.M. from GitHub
  git:
    repo: 'https://github.com/jswetzen/automatic-ripping-machine'
    dest: /opt/arm
    force: yes
    umask: 775
    version: v2.1_dev

- name: install pip dependencies
  pip:
    requirements: '/opt/arm/requirements.txt'
    executable: pip3

- name: symlink udev rule and abcde config
  file:
    src: "/opt/arm/setup/{{ item.src }}"
    dest: "{{ item.dest_dir }}/{{ item.src }}"
    state: link
  with_items:
  - { src: '51-automedia.rules', dest_dir: '/lib/udev/rules.d/' }
  - { src: '.abcde.conf', dest_dir: '/home/arm/' }

- name: copy ARM config
  copy:
    src: arm.yaml
    dest: /opt/arm/arm.yaml

- name: symlink arm config
  file:
    src: /opt/arm/arm.yaml
    dest: /etc/arm/arm.yaml
    state: link

- name: mount cifs network drive on boot if required
  mount:
    name: "{{ arm_setup_cifs_mount_point }}"
    src: "{{ arm_setup_cifs_path }}"
    fstype: cifs
    opts: "rw,user,auto,suid{{ cifs_guest }}{{ cifs_username }}{{ cifs_password }}"
    state: mounted
  when:
  - CIFS_PATH is defined
  - CIFS_PATH != ""
  - CIFS_MOUNT_POINT is defined
  - CIFS_MOUNT_POINT != ""

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
  - "{{ arm_setup_armpath }}"
  - "{{ arm_setup_rawpath }}"
  - "{{ arm_setup_media_dir }}"

- name: set up drive mount point
  file:
    path: /mnt/dev/sr0
    state: directory
    recurse: yes
  become: true

- name: ensure fstab entry exists for drive
  lineinfile:
    path: /etc/fstab
    state: present
    line: "/dev/sr0  /mnt/dev/sr0  udf,iso9660  user,noauto,exec,utf8  0  0"
  become: true
